// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace csharp_react.Data.Models
{
    public partial class CapstoneContext : DbContext
    {
        public CapstoneContext()
        {
        }

        public CapstoneContext(DbContextOptions<CapstoneContext> options)
            : base(options)
        {
        }

        public virtual DbSet<EmployeeHours> EmployeeHours { get; set; }
        public virtual DbSet<Inventory> Inventory { get; set; }
        public virtual DbSet<Items> Items { get; set; }
        public virtual DbSet<TransactionPurchases> TransactionPurchases { get; set; }
        public virtual DbSet<Transactions> Transactions { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<EmployeeHours>(entity =>
            {
                entity.Property(e => e.ClockInTime).HasColumnType("datetime");

                entity.Property(e => e.ClockOutTime).HasColumnType("datetime");

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.EmployeeHours)
                    .HasForeignKey(d => d.EmployeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__EmployeeH__Emplo__30F848ED");
            });

            modelBuilder.Entity<Inventory>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Quantity)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.Item)
                    .WithMany()
                    .HasForeignKey(d => d.ItemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Inventory__ItemI__276EDEB3");
            });

            modelBuilder.Entity<Items>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Price)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TransactionPurchases>(entity =>
            {
                entity.HasOne(d => d.Item)
                    .WithMany(p => p.TransactionPurchases)
                    .HasForeignKey(d => d.ItemId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Transacti__ItemI__2D27B809");

                entity.HasOne(d => d.Transaction)
                    .WithMany(p => p.TransactionPurchases)
                    .HasForeignKey(d => d.TransactionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Transacti__Trans__2E1BDC42");
            });

            modelBuilder.Entity<Transactions>(entity =>
            {
                entity.Property(e => e.Subtotal)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Tax)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Time).HasColumnType("datetime");

                entity.Property(e => e.Total)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.Transactions)
                    .HasForeignKey(d => d.EmployeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Transacti__Emplo__2A4B4B5E");
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.HasKey(e => e.EmployeeId)
                    .HasName("PK__Users__7AD04F11D77AFF75");

                entity.Property(e => e.EmployeeId).ValueGeneratedNever();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}